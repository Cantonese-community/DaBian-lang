/*
 * The base class of AST node.  
*/
咩系 AST?
  佢个老豆叫 object
  咩都唔做
明白未啊?

/*
 * printAST ::= 捅了老挝 -> ArgsList
 * ArgsList ::= String
            |  Numbwe
            |  identifier
            |  ( Expr )
*/
咩系 PrintAST?
  佢个老豆叫 AST
  佢有啲咩 => |args|

  佢识得 生成代码 -> {
    如果 |身位(自己嘅 args, 0) == 'string' 或者 身位(自己嘅 args, 0) == 'num' 或者 \
          身位(自己嘅 args, 0) == 'identifier'| 嘅话 -> {
      还数 |"print(" + 身位(自己嘅 args, 1) + ")" + "\n"|
    }
    定系 |身位(自己嘅 args, 0) == 'expr'| 嘅话 -> {
      还数 |"print" + 身位(自己嘅 args, 1) + "\n"|
    }
  }
明白未啊?

/*
 * InputAST ::= 抓个小贼 -> ( value, str )
 * value ::= id
*/
咩系 InputAST?
  佢个老豆叫 AST
  佢有啲咩 => |value, str|
  佢识得 生成代码 => {
    还数 |自己嘅 value + "=input(" + 自己嘅 str + ")" + "\n"|
  }
  
明白未啊?

咩系 AssignAST?
  佢个老豆叫 AST
  佢有啲咩 => |KeyList, ValueList|
  佢识得 生成代码 => {
    讲嘢: ret 係 ""
    i 从 0 行到 |自己嘅 KeyList 嘅长度| 
      讲嘢: ret 係 |ret + 身位(自己嘅 KeyList, i) + '=' + 身位(自己嘅 ValueList, i) + '\n'|
    行晒
    还数 ret
  }
明白未啊?

咩系 FunctionDefAST?
  佢个老豆叫 AST
  佢有啲咩 => |FuncName, Args, Body|
  佢识得 生成代码 => {
    如果 |自己嘅 Args 嘅长度 系 0| 嘅话 -> {
      还数 |"def " + 自己嘅 FuncName + "():" + '\n'|  
    }
    唔系 嘅话 -> {
      还数 |"def " + 自己嘅 FuncName + 自己嘅 Args + ":\n"|
    }
  }
明白未啊?

咩系 FunctionCallAST?
  佢个老豆叫 AST
  佢有啲咩 => |FuncName, Args|
  佢识得 生成代码 => {
    如果 |自己嘅 Args 嘅长度 系 0| 嘅话 -> {
      还数 |自己嘅 FuncName + "()" + '\n'|
    }
    唔系 嘅话 -> {
      还数 |自己嘅 FuncName + 自己嘅 Args + "\n"|
    }
  }
明白未啊?

咩系 ReturnAST?
  佢个老豆叫 AST
  佢有啲咩 => |val|
  佢识得 生成代码 => {
    还数 |"return " + 自己嘅 val + "\n"|
  }
明白未啊?

咩系 WhileAST?
  佢个老豆叫 AST
  佢有啲咩 => |Cond, Body|
  佢识得 生成代码 -> {
    还数 |"while " + 自己嘅 Cond + ":" + "\n"|
  }
明白未啊?

咩系 IfAST?
  佢个老豆叫 AST
  佢有啲咩 => |Cond, IfBody, ElseBody|
  佢识得 生成代码 => {
    还数 |"if " + 自己嘅 Cond + ":" + "\n"|
  }
明白未啊?

咩系 ElifAST?
  佢个老豆叫 AST
  佢有啲咩 => |Cond, Body|
  佢识得 生成代码 => {
    还数 |"elif " + 自己嘅 Cond + ":" + "\n"|
  }
明白未啊?